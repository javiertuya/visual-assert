<project name="VisualAssert" default="build" basedir="." xmlns:if="ant:if" xmlns:unless="ant:unless" xmlns:dn="antlib:org.apache.ant.dotnet" xmlns="antlib:org.apache.tools.ant">

	<description>Version C# de Selema</description>
  <!--Uses java for sharpen if this property specifies the location of a java7 executable, if not, uses containers -->
  <property environment="env"/>
  <property name="java7.exec" value="C:/Program Files/Java/jdk1.7.0_75/bin/java" unless:set="env.GITHUB_WORKSPACE" />

  <target name="sharpen" description="Traduce el codigo fuente de Selema de Java a C#"
          depends="sharpen.preprocess, sharpen.sharpen, sharpen.postprocess ">
    <!--
      Three stages (each is run as a target):
      - copy java files to a sharpen-temp/java directory and gets dependencies
      - perform the sharpen translation
      - final changes in translated files (in temporary folder) and copy to the solution
    -->
  </target>

  <target name="sharpen.preprocess">
    <!--copia los fuentes a la carpeta temporal donde se traduciran y postprocesaran-->
    <copy todir="sharpen-temp/java">
      <fileset dir="../java/src/main/java" >
        <exclude name="**/FrameworkAssert.*" />
      </fileset>
    </copy>
    <echo file="sharpen-temp/java/giis/visualassert/FrameworkAssert.java">
      package giis.visualassert;
      public class FrameworkAssert {
    	  public FrameworkAssert(Framework framework) { }
    	  public Framework getFramework() { return Framework.NONE; }
    	  public void failNotEquals(String expected, String actual, String message) { throw new RuntimeException(message); }
      }
    </echo>
    <copy todir="sharpen-temp/java">
      <fileset dir="../java/src/test/java" >
        <exclude name="**/TestWithFrameworks.*" />
      </fileset>
    </copy>

    <!-- Other libraries to resolve depenencies when executing sharpen (delcared in sharpen-all-options.txt) -->
    <mkdir dir="sharpen-temp/lib" />
    <sequential>
      <get src="https://repo1.maven.org/maven2/junit/junit/4.13/junit-4.13.jar" dest="sharpen-temp/lib/junit-4.13.jar" usetimestamp="true" />
      <get src="https://repo1.maven.org/maven2/commons-io/commons-io/2.6/commons-io-2.6.jar" dest="sharpen-temp/lib/commons-io-2.6.jar" usetimestamp="true" />
      <get src="https://repo1.maven.org/maven2/org/bitbucket/cowwoc/diff-match-patch/1.2/diff-match-patch-1.2.jar" dest="sharpen-temp/lib/diff-match-patch-1.2.jar" usetimestamp="true" />
    </sequential>
  </target>

  <target name="sharpen.sharpen">
    <sharpen.run.java7 if:set="java7.exec" />
    <sharpen.run.container unless:set="java7.exec" />
  </target>

  <macrodef name="sharpen.run.container" description="Run sharpen from a container" >
    <sequential>
      <exec executable="docker" failonerror="true" >
        <arg value="build" />
        <arg value="-t" />
        <arg value="sharpen" />
        <arg value="./sharpen-docker" />
      </exec>
      <echo>${basedir}</echo>
      <exec executable="docker" failonerror="true" >
        <arg value="run" />
        <arg value="-v" />
        <arg value="${basedir}:/sharpen/workdir" />
        <arg value="sharpen" />
        <arg value="." />
        <arg value="sharpen-temp/java" />
        <arg value="@sharpen-all-options.txt" />
      </exec>
    </sequential>
  </macrodef>

  <macrodef name="sharpen.run.java7" description="Run sharpen with local java7 installation" >
    <sequential>
      <get src="https://github.com/javiertuya/sharpen/releases/download/v1.0.1-fork/sharpencore-0.0.1-SNAPSHOT.jar" 
           dest="sharpen-temp/lib/sharpencore-0.0.1-SNAPSHOT.jar" usetimestamp="true" />
      <exec executable="${java7.exec}" failonerror="true" >
        <arg value="-jar" />
        <arg value="sharpen-temp/lib/sharpencore-0.0.1-SNAPSHOT.jar" />
        <arg value="sharpen-temp/java" />
        <arg value="@sharpen-all-options.txt" />
      </exec>
    </sequential>
  </macrodef>
  
  <target name="sharpen.postprocess">
    <!--remplazos globales en el core y tests-->
    <replace dir="sharpen-temp/sharpen-temp.net/">
      <replacefilter token="//NOSONAR" value="//" />
      <replacefilter token="using Sharpen;" value="" />
      <replacefilter token="using Org.Bitbucket.Cowwoc.Diffmatchpatch;" value="" />
      <replacefilter token="DiffMatchPatch dmp = new DiffMatchPatch();" value="DiffMatchPatch.diff_match_patch dmp = new DiffMatchPatch.diff_match_patch();" />
      <replacefilter token="LinkedList&lt;DiffMatchPatch.Diff&gt;" value="List&lt;DiffMatchPatch.Diff&gt;" />
      <replacefilter token="dmp.DiffMain" value="dmp.diff_main" />
      <replacefilter token="dmp.DiffCleanupSemantic" value="dmp.diff_cleanupSemantic" />
      <replacefilter token="dmp.DiffPrettyHtml" value="dmp.diff_prettyHtml" />
      <replacefilter token="Operation.Insert" value="Operation.INSERT" />
      <replacefilter token="Operation.Delete" value="Operation.DELETE" />
      <replacefilter token="Operation.Equal" value="Operation.EQUAL" />

      <replacefilter token="[Ignore]" value="[Ignore(&quot;&quot;)]" />
      <replacefilter token="java.lang.AssertionError" value="System.Exception" />
      <replacefilter token="org.junit.ComparisonFailure" value="System.Exception" />
      <replacefilter token="junit.framework.ComparisonFailure" value="System.Exception" />
      <replacefilter token="org.opentest4j.AssertionFailedError" value="System.Exception" />
      <replacefilter token="giis.visualassert.portable." value="Giis.Visualassert.Portable." />
      <replacefilter token="giis.visualassert." value="Giis.Visualassert." />
      <replacefilter token="TestSoftVisualAssertCallStack.test" value="TestSoftVisualAssertCallStack.Test" />
      <replacefilter token="$OtherClass.doAssert" value=".OtherClass.DoAssert" />
      <replacefilter token=".callDoAssert" value=".CallDoAssert" />
      <replacefilter token="TestSoftVisualAssert.doFailSoftAssert" value="TestSoftVisualAssert.DoFailSoftAssert" />
      <replacefilter token="target/" value="../../../../reports/" />
      <replacefilter token="src/test/resources" value="../../../../../java/src/test/resources" />
    </replace>
    <replace file="sharpen-temp/sharpen-temp.net/Giis.VisualAssert/TestSoftAggregateDiffs.cs">
      <replacefilter token="public virtual void TestJunit5FailureWithFramework()" value="[Ignore(&quot;&quot;)] public virtual void TestJunit5FailureWithFramework()" />
      <replacefilter token="public virtual void TestJunit5FailureWithFileAndFramework()" value="[Ignore(&quot;&quot;)] public virtual void TestJunit5FailureWithFileAndFramework()" />
      <replacefilter token="public virtual void TestJunit4FailureWithFileAndFramework()" value="[Ignore(&quot;&quot;)] public virtual void TestJunit4FailureWithFileAndFramework()" />
      <replacefilter token="public virtual void TestJunit3FailureWithFileAndFramework()" value="[Ignore(&quot;&quot;)] public virtual void TestJunit3FailureWithFileAndFramework()" />
    </replace>

    <!-- Copia a los proyectos .net -->
    <copy todir="VisualAssert">
      <fileset dir="sharpen-temp/sharpen-temp.net">
        <exclude name="Giis.Visualassert.Portable/**" />
        <exclude name="Giis.Visualassert/Test*.*" />
      </fileset>
      <filterchain>
        <concatfilter prepend="sharpen-autogenerated-note.txt"/>
      </filterchain>
    </copy>
    <copy todir="TestVisualAssert">
      <fileset dir="sharpen-temp/sharpen-temp.net">
         <include name="Giis.Visualassert/Test*.*" />
      </fileset>
      <filterchain>
        <concatfilter prepend="sharpen-autogenerated-note.txt"/>
      </filterchain>
    </copy>
  </target>

</project>