<project name="VisualAssert" default="convert" basedir="." xmlns:if="ant:if" xmlns:unless="ant:unless" xmlns:dn="antlib:org.apache.ant.dotnet" xmlns="antlib:org.apache.tools.ant">

  <description>Conversion from ;ava to C# using JavaToCSharp</description>

  <import file="build-convert.xml"/>

  <target name="clone" description="Gets the JavaToCSharp converter (from forked branch)">
    <runClone />
  </target>

  <target name="convert">
    <runConvert input="../java/src/main/java/giis/visualassert" output="VisualAssert/Giis.Visualassert"  mapping="java-mapping.yml"/>
    <delete file="VisualAssert/Giis.Visualassert/FrameworkAssert.cs" />
    <replace file="VisualAssert/Giis.Visualassert/AbstractVisualAssert.cs" >
      <replacefilter token="DiffMatchPatch dmp = new DiffMatchPatch();" value="DiffMatchPatch.diff_match_patch dmp = new DiffMatchPatch.diff_match_patch();" />
      <replacefilter token="dmp.DiffMain(" value="dmp.diff_main(" />
      <replacefilter token="LinkedList&lt;DiffMatchPatch.Diff&gt;" value="List&lt;DiffMatchPatch.Diff&gt;" />
      <replacefilter token="DiffCleanupSemantic" value="diff_cleanupSemantic" />
      <replacefilter token="DiffPrettyHtml" value="diff_prettyHtml" />
      <replacefilter token=".CharAt(i)" value="[i]" />
      <replacefilter token="case INSERT:" value="case DiffMatchPatch.Operation.INSERT:" />
      <replacefilter token="case DELETE:" value="case DiffMatchPatch.Operation.DELETE:" />
      <replacefilter token="case EQUAL:" value="case DiffMatchPatch.Operation.EQUAL:" />
    </replace>

    <runConvert input="../java/src/test/java/giis/visualassert" output="TestVisualAssert/Giis.Visualassert" mapping="java-mapping.yml" />
    <delete file="TestVisualAssert/Giis.Visualassert/TestWithFrameworks.cs" />
    <replace dir="TestVisualAssert/Giis.Visualassert/">
      <replacefilter token="[Ignore]" value="[Ignore(&quot;&quot;)]" />
      <replacefilter token="e.GetMessage()" value="e.Message" />
      <replacefilter token="InvalidOperationException" value="Exception" />
      <replacefilter token="e.GetType().GetName()" value="e.GetType().FullName" />
      <replacefilter token="String.ValueOf(" value="(" />
      <replacefilter token="java.lang.AssertionError" value="System.Exception" />
      <replacefilter token="org.junit.ComparisonFailure" value="System.Exception" />
      <replacefilter token="junit.framework.ComparisonFailure" value="System.Exception" />
      <replacefilter token="org.opentest4j.AssertionFailedError" value="System.Exception" />
      <replacefilter token="target/" value="../../../../reports/" />
      <replacefilter token="src/test/resources" value="../../../../../java/src/test/resources" />
    </replace>
    <replace file="TestVisualAssert/Giis.Visualassert/TestSoftAggregateDiffs.cs">
      <replacefilter token="public virtual void TestJunit5FailureWithFramework()" value="[Ignore(&quot;&quot;)] public virtual void TestJunit5FailureWithFramework()" />
      <replacefilter token="public virtual void TestJunit5FailureWithFileAndFramework()" value="[Ignore(&quot;&quot;)] public virtual void TestJunit5FailureWithFileAndFramework()" />
      <replacefilter token="public virtual void TestJunit4FailureWithFileAndFramework()" value="[Ignore(&quot;&quot;)] public virtual void TestJunit4FailureWithFileAndFramework()" />
      <replacefilter token="public virtual void TestJunit3FailureWithFileAndFramework()" value="[Ignore(&quot;&quot;)] public virtual void TestJunit3FailureWithFileAndFramework()" />
    </replace>

    <replace dir=".">
      <include name="VisualAssert/Giis.Visualassert/*.cs" />
      <include name="TestVisualAssert/Giis.Visualassert/*.cs" />
      <replacefilter token="using converted.placeholder;" value="/////// THIS FILE HAS BEEN AUTOMATICALLY CONVERTED FROM THE JAVA SOURCES. DO NOT EDIT ///////" />
    </replace>
  </target>

</project>